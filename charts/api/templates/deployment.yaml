apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.APP.NAME }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.APP.NAME }}
      name: {{ .Values.APP.TAG_NAME }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ .Values.APP.NAME }}
        name: {{ .Values.APP.TAG_NAME }}
        azure.workload.identity/use: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"        
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
      - name: {{ .Values.APP.NAME }}
        image:  {{ print .Values.ACR.NAME "/" .Values.APP.NAMESPACE "/" .Values.APP.NAME ":" .Values.APP.VERSION }} 
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false 
        env:
        - name: RIC_OTEL_ENDPOINT
          value: {{ print .Values.OTEL.ENDPOINT }}
        - name: RIC_AOI_ENDPOINT
          value:  {{ print .Values.OPENAI.ENDPOINT }}
        - name: APP_INSIGHTS_CONNECTION_STRING
          value: {{ .Values.APP_INSIGHTS.CONNECTION_STRING }}          
        ports:
        - containerPort: {{ .Values.APP.PORT }}
        - containerPort: 9090
        resources:
          limits:
            memory: "512Mi"
            cpu: "2"
          requests:
            memory: "128Mi"
            cpu: "0.5"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ print .Values.APP.NAME "-svc" }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  selector:
    app: {{ .Values.APP.NAME }}
    name: {{ .Values.APP.TAG_NAME }}
  ports:
  - port: 80
    targetPort: {{ .Values.APP.PORT }}
    name: web
  - port: 9090
    targetPort: 9090
    name: metrics    
  type: ClusterIP
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name:  {{ print .Values.APP.NAME "-vs" }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  hosts:
  -  "*"
  gateways:
  -  {{ .Values.ISTIO.GATEWAY }}
  http:
  - route:
    - destination:
        host: {{ print .Values.APP.NAME "-svc" }}
        port:
          number: 80
    corsPolicy:          
      allowMethods:
      - POST
      - PUT
      - GET
      - OPTIONS
      allowOrigins:
      - regex: 'https?://(?:[\w-]+\.)*(azurestaticapps\.net|azure-api\.net)(?:/[\w\-./?%&=]*)?'
      unmatchedPreflights: FORWARD